sourceSets {
	testFunctional {
		java {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
			srcDir file('src/testFunctional/java')
		}
		resources.srcDir file('src/testFunctional/resources')
	}
}

configurations {
	testFunctionalCompile.extendsFrom testCompile
	testFunctionalRuntime.extendsFrom testRuntime
}

dependencies {
	compileOnly group: "biz.aQute.bnd", name: "biz.aQute.bndlib", version: "3.1.0"
	compileOnly group: "com.liferay", name: "com.liferay.osgi.util", version: "3.0.0"
	compileOnly group: "com.liferay", name: "com.liferay.portal.spring.extender", version: "2.0.0"
	compileOnly group: "com.liferay.portal", name: "com.liferay.portal.kernel", version: "2.6.0"
	compileOnly group: "com.liferay.portal", name: "com.liferay.util.java", version: "2.2.0"
	compileOnly project(":modules:tasks:tasks-api")

	testCompile group: "biz.aQute.bnd", name: "biz.aQute.bnd", version: "3.3.0"
	testCompile group: "biz.aQute.bnd", name: "biz.aQute.remote.api", version: "3.3.0"
	testCompile group: "com.liferay.arquillian", name: "com.liferay.arquillian.arquillian-container-liferay", version: "1.0.6"
	testCompile group: "junit", name: "junit", version: "4.12"
	testCompile group: "org.jboss.arquillian.graphene", name: "graphene-webdriver", version: "2.1.0.Final"
	testCompile group: "org.jboss.arquillian.junit", name: "arquillian-junit-container", version: "1.1.11.Final"
	testCompile project(":modules:tasks:tasks-api")
}

buildService {
	apiDir = "../tasks-api/src/main/java"
}

group = "com.liferay.tasks"

startTestableTomcat {
	checkTimeout = 10 * 60 * 1000
}

testIntegration {
	outputs.upToDateWhen { false }

	dependsOn jar, ":initBundle", startTestableTomcat
	dependsOn ":modules:tasks:tasks-api:jar"

	systemProperty 'tasksApiJarFile', project(":modules:tasks:tasks-api").jar.archivePath
	systemProperty 'jarFile', jar.archivePath
}

task testFunctional(type: Test) {
	testClassesDir = sourceSets.testFunctional.output.classesDir
	classpath = sourceSets.testFunctional.runtimeClasspath
	outputs.upToDateWhen { false }

	dependsOn jar, ":initBundle", startTestableTomcat
	dependsOn ":modules:tasks:tasks-api:jar"
	dependsOn ":wars:tasks-web:war"

	systemProperty 'tasksApiJarFile', project(":modules:tasks:tasks-api").jar.archivePath
	systemProperty 'tasksWebWarFile', project(":wars:tasks-web").war.archivePath

	systemProperty 'jarFile', jar.archivePath

	doLast {
		delete new File("target")
	}
}