sourceSets {
	testFunctional {
		java {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
			srcDir file('src/testFunctional/java')
		}
		resources.srcDir file('src/testFunctional/resources')
	}
}

configurations {
	testFunctionalCompile.extendsFrom testCompile
	testFunctionalRuntime.extendsFrom testRuntime
}

dependencies {
	compileOnly group: "com.liferay.portal", name: "com.liferay.portal.kernel", version: "2.0.0"
	compileOnly group: "javax.portlet", name: "portlet-api", version: "2.0"
	compileOnly group: "javax.servlet", name: "javax.servlet-api", version: "3.0.1"
	compileOnly group: "org.osgi", name: "osgi.cmpn", version: "6.0.0"
	compileOnly project(":modules:tasks:tasks-api")	
	compileOnly project(":modules:tasks:tasks-service")	

	testCompile group: "biz.aQute.bnd", name: "biz.aQute.bnd", version: "3.3.0"
	testCompile group: "biz.aQute.bnd", name: "biz.aQute.remote.api", version: "3.3.0"
	testCompile group: "com.liferay.arquillian", name: "com.liferay.arquillian.arquillian-container-liferay", version: "1.0.6"
	testCompile group: "junit", name: "junit", version: "4.12"
	testCompile group: "org.jboss.arquillian.graphene", name: "graphene-webdriver", version: "2.1.0.Final"
	testCompile group: "org.jboss.arquillian.junit", name: "arquillian-junit-container", version: "1.1.11.Final"
	testCompile project(":modules:tasks:tasks-api")	
	testCompile project(":modules:tasks:tasks-service")	
	
}

startTestableTomcat {
	checkTimeout = 10 * 60 * 1000
}

testIntegration {
	outputs.upToDateWhen { false }

	dependsOn jar//, ":initBundle", startTestableTomcat

	project(':modules:tasks:tasks-api').afterEvaluate { project ->
		dependsOn project.jar
		systemProperty 'tasksApiJarFile', project.jar.archivePath
	}

	project(':modules:tasks:tasks-service').afterEvaluate { project ->
		dependsOn project.jar
		systemProperty 'tasksServiceJarFile', project.jar.archivePath
	}
	
	systemProperty 'jarFile', jar.archivePath
}

task testFunctional(type: Test) {
	testClassesDir = sourceSets.testFunctional.output.classesDir
	classpath = sourceSets.testFunctional.runtimeClasspath
	outputs.upToDateWhen { false }

	dependsOn jar, ":initBundle", startTestableTomcat

	project(':modules:tasks:tasks-api').afterEvaluate { project ->
		dependsOn project.jar
		systemProperty 'tasksApiJarFile', project.jar.archivePath
	}

	project(':modules:tasks:tasks-service').afterEvaluate { project ->
		dependsOn project.jar
		systemProperty 'tasksServiceJarFile', project.jar.archivePath
	}
	
	project(':wars:tasks-web').afterEvaluate { project ->
		dependsOn project.war
		systemProperty 'tasksWebWarFile', project.war.archivePath
	}
	
	systemProperty 'bladeURL', System.getProperty('bladeURL', "https://releases.liferay.com/tools/blade-cli/latest/blade.jar")	
	systemProperty 'jarFile', jar.archivePath

	doLast {
		delete new File("blade.jar")
		delete new File("target")
	}
}

stopTestableTomcat {
	doLast {
		delete new File(liferay.liferayHome, "data")
	}
}

//check.dependsOn testFunctional